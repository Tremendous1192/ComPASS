<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComPASS</name>
    </assembly>
    <members>
        <member name="T:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText">
            <summary>
            テキストの入出力を扱うクラス。
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.CreateFullPath(System.String)">
            <summary>
            絶対パスを作成する
            </summary>
            <param name="pathOrFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.GetFileNameOfTextType">
            <summary>
            現在のDirectoryにあるtxtデータのファイル名を全て取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.ReadText(System.String,System.String)">
            <summary>
            txtデータを読み込む。string[]を読み込む。
            </summary>
            <param name="textFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.ReadTextSplitedByComma2DimArray(System.String,System.String)">
            <summary>
            txtデータを読み込む。string[,]を読み込む。
            カンマ , 区切りでデータを取り出す。
            </summary>
            <param name="textFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.WriteText(System.String,System.String,System.Boolean,System.String)">
            <summary>
            txtファイルに書き出します。stringを記録する
            </summary>
            <param name="textFileName"></param>
            <param name="writtenText"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.WriteText(System.String,System.String[],System.Boolean,System.String)">
            <summary>
            txt に書き足す。string[]を記録する
            </summary>
            <param name="textFileName"></param>
            <param name="writtenText"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.WriteText(System.String,System.Collections.Generic.List{System.String},System.Boolean,System.String)" -->
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.WriteText(System.String,System.String[0:,0:],System.Boolean,System.String)">
            <summary>
            txt に書き足す。string[ , ]を記録する
            </summary>
            <param name="textFileName"></param>
            <param name="writtenText"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOText.WriteText(System.String,System.String[][],System.Boolean,System.String)">
            <summary>
            txt に書き足す。string[ , ]を記録する
            </summary>
            <param name="textFileName"></param>
            <param name="writtenText"></param>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.result">
            <summary>
            計算結果
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.Result">
            <summary>
            計算結果をもう一度取得する
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.ud1">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.ud2">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.seed1">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.seed2">
            <summary>
            種
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.#ctor(System.UInt32,System.UInt32)">
            <summary>
            constructor
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.SetSeed(System.UInt32,System.UInt32)">
            <summary>
            種を設定する
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.NextDouble">
            <summary>
            乱数を生成する
            位置母数(location parameter) 0
            尺度母数(scale parameter) 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.CauchyDistribution.NextDouble(System.Double,System.Double)">
            <summary>
            乱数を生成する
            位置母数(location parameter) location
            尺度母数(scale parameter) scale
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.result">
            <summary>
            計算結果
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.Result">
            <summary>
            計算結果をもう一度取得する
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.ud1">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.ud2">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.seed1">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.seed2">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.even">
            <summary>
            計算回数
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.#ctor(System.UInt32,System.UInt32)">
            <summary>
            constructor
            </summary>
            <param name="the_seed"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.SetSeed(System.UInt32,System.UInt32)">
            <summary>
            種を設定する
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.NextDouble">
            <summary>
            乱数を生成する
            標準偏差 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.HalfNormalDistribution.NextDouble(System.Double)">
            <summary>
            乱数を生成する
            標準偏差 std
            </summary>
            <param name="std"></param>
            <returns></returns>
        </member>
        <member name="T:Tremendous1192.SelfEmployed.CoMPASS.MathApp.IRandomNumber">
            <summary>
            乱数を生成するインターフェース。
            基本となる一様乱数はメルセンヌ・ツイスタに従って生成される。
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.result">
            <summary>
            計算結果
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.Result">
            <summary>
            計算結果をもう一度取得する
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.ud1">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.ud2">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.seed1">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.seed2">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.even">
            <summary>
            計算回数
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.#ctor(System.UInt32,System.UInt32)">
            <summary>
            constructor
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.SetSeed(System.UInt32,System.UInt32)">
            <summary>
            種を設定する
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.NextDouble">
            <summary>
            乱数を生成する
            平均値 0
            標準偏差 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LogNormalDistribution.NextDouble(System.Double,System.Double)">
            <summary>
            乱数を生成する
            平均値 average
            標準偏差 std
            </summary>
            <param name="average"></param>
            <param name="std"></param>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.result">
            <summary>
            計算結果
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.Result">
            <summary>
            計算結果をもう一度取得する
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.ud1">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.ud2">
            <summary>
            一様分布
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.seed1">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.seed2">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.even">
            <summary>
            計算回数
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.#ctor(System.UInt32,System.UInt32)">
            <summary>
            constructor
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.SetSeed(System.UInt32,System.UInt32)">
            <summary>
            種を設定する
            </summary>
            <param name="the_seed_1"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.NextDouble">
            <summary>
            標準正規分布に従う乱数を生成する
            平均値 0
            標準偏差 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.NormalDistribution.NextDouble(System.Double,System.Double)">
            <summary>
            乱数を生成する
            平均値 average
            標準偏差 std
            </summary>
            <param name="average"></param>
            <param name="std"></param>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.result">
            <summary>
            計算結果
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.Result">
            <summary>
            計算結果をもう一度取得する
            </summary>
            <returns></returns>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.seed">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.X">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.Y">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.Z">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.W">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.T">
            <summary>
            種
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.counterArray">
            <summary>
            計算回数を記録する配列.
            乱数列を使い切ることはほぼないので、使用しない.
            0.1ミリ秒に1度乱数を生成するとして, 1年間乱数を生成し続けるとしても、2^39個の乱数列しか使用しない。
            メルセンヌツイスターの周期は2^19937-1個であるため, 十二分に余裕がある.
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.#ctor(System.UInt32)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.SetSeed(System.UInt32)">
            <summary>
            種を設定する
            </summary>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.NextDouble">
            <summary>
            乱数を生成する
            値域  :[ 0 , 1 ]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.NextDouble(System.Double,System.Double)">
            <summary>
            乱数を生成する
            値域  :[ min , max ]
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.UniformDistribution.CountUp">
            <summary>
            メルセンヌツイスターの周期2^19937-1 回毎に種をリセットする
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.DesignMatrix`1.Average(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列(行ベクトルの集合)の、平均ベクトルを返す。
            </summary>
            <param name="designMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.DesignMatrix`1.InverseVarianceCovarianceMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            分散・共分散行列の逆行列を返す。
            </summary>
            <param name="designMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.DesignMatrix`1.VarianceCovarianceMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            分散・共分散行列を返す。
            </summary>
            <param name="designMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.Learn(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            回帰直線の係数を学習する
            </summary>
            <param name="dsignMatrixWithoutConctant"></param>
            <param name="outputSetY"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.RidgeLearn(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},`0)">
            <summary>
            Ridge回帰で回帰直線の係数を学習する.
            </summary>
            <param name="dsignMatrixWithoutConctant"></param>
            <param name="outputSetY"></param>
            <param name="lambda"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.LASSOLearn(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},`0)">
            <summary>
            LASSSO回帰で回帰直線の係数を学習する
            </summary>
            <param name="dsignMatrixWithoutConctant"></param>
            <param name="outputSetY"></param>
            <param name="lambda"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.MakeVectorForLinerRegression(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            線形回帰用のベクトルを生成する。
            </summary>
            <param name="vectorWithoutConstant"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.MakeDesignMatrixWithConstant(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列を生成する
            </summary>
            <param name="matrixWithoutConstant"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.Regression(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            回帰直線の値を予測する
            </summary>
            <param name="dsignMatrixWithoutConctant"></param>
            <param name="coefficientW"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegression`1.Regression(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            回帰直線の値を予測する
            </summary>
            <param name="vectorWithoutConctant"></param>
            <param name="coefficientW"></param>
            <returns></returns>
        </member>
        <member name="T:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1">
            <summary>
            行列計算用のクラス。行列の要素は2重配列[ , ]で表す。 
            the class clculating Matrix. Matrix is defined as 2 dim array[ , ].
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクター。零行列を生成する。
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.#ctor(System.Int32,System.Int32,`0[])">
            <summary>
            コンストラクター。1次元配列を2次元配列に変換して、行列を生成する。
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="initialValue"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.#ctor(`0[0:,0:])">
            <summary>
            コンストラクター。二次元配列を初期値として行列を生成する。
            </summary>
            <param name="initialValue"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.#ctor(`0[][])">
            <summary>
            コンストラクター。ジャグ配列を初期値として、行列を生成する。
            行列の列数は、各配列の要素数の長さの最大値とする。
            </summary>
            <param name="initialValue"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Add(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の加算を行う.
            </summary>
            <param name="otherMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.op_Addition(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の加算を行う。演算子 "+" のオーバーロード
            </summary>
            <param name="matrix01"></param>
            <param name="matrix02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Add(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の加算を行う.
            </summary>
            <param name="matrix01"></param>
            <param name="matrix02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Determinant">
            <summary>
            行列式を返す。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Determinant(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列式を返す。
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Inverse">
            <summary>
            逆行列.
            Inverse matrix .
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Inverse(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            逆行列を計算する。
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の乗算
            </summary>
            <param name="matrixMultiplier"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.op_Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の乗算を行う。演算子 "*" のオーバーロード
            </summary>
            <param name="matrixMultiplicand"></param>
            <param name="matrixMultiplier"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の乗算
            </summary>
            <param name="matrixLeftSide"></param>
            <param name="matrixRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.MultiplyMatrixVector(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行列とベクトルの積
            </summary>
            <param name="vectorRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.op_Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行列とベクトルの乗算を行う。演算子 "*" のオーバーロード
            </summary>
            <param name="matrixLeftSide"></param>
            <param name="vectorRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行列とベクトルの積
            </summary>
            <param name="matrixLeftSide"></param>
            <param name="vectorRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.MultiplyVectorMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行列とベクトルの積
            </summary>
            <param name="vectorLeftSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.op_Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            ベクトルと行列の乗算を行う。演算子 "*" のオーバーロード
            </summary>
            <param name="vectorLeftSide"></param>
            <param name="matrixRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            ベクトルと行列の積
            </summary>
            <param name="vectorLeftSide"></param>
            <param name="matrixRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.PickUpRowVector(System.Int32)">
            <summary>
            行ベクトルを返す
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.PickUpRowVector(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},System.Int32)">
            <summary>
            行ベクトルを返す
            </summary>
            <param name="matrix"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Subtract(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の減算を行う.
            </summary>
            <param name="matrixSubtrahend"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.op_Subtraction(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の加算を行う。演算子 "+" のオーバーロード
            </summary>
            <param name="matrixMinuend"></param>
            <param name="matrixSubtrahend"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Subtract(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列の減算加算を行う.
            </summary>
            <param name="matrixMinuend"></param>
            <param name="matrixSubtrahend"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Transpose">
            <summary>
            転置行列を生成する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Transpose(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            転置行列を生成する
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="P:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.Item(System.Int32,System.Int32)">
            <summary>
            入出力のプロパティ
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <returns></returns>
        </member>
        <member name="P:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.RowCount">
            <summary>
            行数
            </summary>
        </member>
        <member name="P:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix`1.ColumnCount">
            <summary>
            列数
            </summary>
        </member>
        <member name="T:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1">
            <summary>
            ベクトル計算用のクラス。各要素は配列[ ]で表す。
            基本的に、行ベクトルと列ベクトルを区別しない。
            the class calculating Vector. Vector is defined as double[].
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.#ctor(System.Int32)">
            <summary>
            コンストラクター。ゼロベクトルを生成する。
            </summary>
            <param name="dimension"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.#ctor(`0[])">
            <summary>
            コンストラクター。1次元配列をベクトルの初期値とする。
            </summary>
            <param name="initialValue"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            コンストラクター。リストをベクトルの初期値とする。
            </summary>
            <param name="initialValue"></param>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.vector">
            <summary>
            ベクトルを格納する配列
            </summary>
        </member>
        <member name="F:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.dimensionCount">
            <summary>
            ベクトルの次元
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Add(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの加算を行う。
            </summary>
            <param name="otherVector"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.op_Addition(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの加算を行う。演算子 "+" のオーバーロード
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Add(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの加算を行う。
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.MultiplyInnerProduct(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの内積
            </summary>
            <param name="otherVector"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.op_Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの内積を行う。演算子 "*" のオーバーロード
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの内積を計算する。
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.MultiplyMatrixVector(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            行列とベクトルの積
            </summary>
            <param name="matrixLeftSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行列とベクトルの積
            </summary>
            <param name="matrixLeftSide"></param>
            <param name="vectorRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.MultiplyVectorMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            ベクトルと行列の積
            </summary>
            <param name="matrixRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Multiply(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            ベクトルと行列の積
            </summary>
            <param name="vectorLeftSide"></param>
            <param name="matrixRightSide"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Norm_L2">
            <summary>
            ベクトルのL2ノルムを返す。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Norm_L2(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルのL2ノルムを返す。
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Subtract(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの減算を行う。
            </summary>
            <param name="subtrahendVector"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.op_Subtraction(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの加算を行う。演算子 "+" のオーバーロード
            </summary>
            <param name="minuendVector"></param>
            <param name="subtrahendVector"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Subtract(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            ベクトルの加算を行う。
            </summary>
            <param name="minuendVector"></param>
            <param name="subtrahendVector"></param>
            <returns></returns>
        </member>
        <member name="P:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Item(System.Int32)">
            <summary>
            ベクトルの要素。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector`1.Dimension">
            <summary>
            ベクトルの次元
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.GaussianKernel`1.SetDesignMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列の分散共・分散行列の逆行列をセットする。
            </summary>
            <param name="designMatrix"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.GaussianKernel`1.SetVarianceCovarianceMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列の分散共・分散行列の逆行列をセットする。
            </summary>
            <param name="varianceCovarianceMatrix"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.GaussianKernel`1.Calculate(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            カーネル関数を計算する。
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SimplePolynomialKernel`1.SetDesignMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列の分散共・分散行列の逆行列をセットする。
            Simple Polynomial Kernel はこの逆行列を使用しないので、何も処理しない。
            </summary>
            <param name="designMatrix"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SimplePolynomialKernel`1.SetVarianceCovarianceMatrix(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0})">
            <summary>
            計画行列の分散共・分散行列の逆行列をセットする。
            Simple Polynomial Kernel はこの逆行列を使用しないので、何も処理しない。
            </summary>
            <param name="varianceCovarianceMatrix"></param>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SimplePolynomialKernel`1.Calculate(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            カーネル関数を計算する。
            </summary>
            <param name="vector01"></param>
            <param name="vector02"></param>
            <returns></returns>
        </member>
        <member name="T:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SupportVectorMachine`1">
            <summary>
            サポートベクトルマシンの計算を行うクラス
            </summary>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SupportVectorMachine`1.Classify(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.IKernel{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0})">
            <summary>
            行ベクトルの識別を行う .
            Perform row vector identification .
            </summary>
            <param name="labelsY"></param>
            <param name="designMatrixWithoutConstant"></param>
            <param name="iKernel"></param>
            <param name="CoefficientsA"></param>
            <param name="rowVector"></param>
            <returns></returns>
        </member>
        <member name="M:Tremendous1192.SelfEmployed.CoMPASS.MathApp.SupportVectorMachine`1.Learn(Tremendous1192.SelfEmployed.CoMPASS.MathApp.Vector{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.Matrix{`0},Tremendous1192.SelfEmployed.CoMPASS.MathApp.IKernel{`0},System.Int32)">
            <summary>
            係数Aを学習する .
            Learn coefficient A .
            </summary>
            <param name="labelsY"></param>
            <param name="designMatrixWithoutConstant"></param>
            <param name="iKernel"></param>
            <param name="hyperParameterExponent"></param>
            <returns></returns>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.IOApp.IOTextTest.TestReadTextSplitedByCommaJagArray(System.Double)">
            <summary>
            1次元配列 double[3] をカンマ区切りstringに変換して保存して、その後読み込む.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.DesignMatrixTest.VarianceCovarianceMatrixTest">
            <summary>
            分散共分散のテスト関数
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.InterfaceTest.Study01">
            <summary>
            interfaceの勉強用の関数
            </summary>
        </member>
        <member name="T:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.IShapes`1">
            <summary>
            引用 - C# Programming: Creating and Using a Generic Interface。
            http://www.functionx.com/csharp40/interfaces/cugi.htm
            。interfaceとgenericの勉強のために、引用した。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.GeometricShapes`1">
            <summary>
            引用 - C# Programming: Creating and Using a Generic Interface
            http://www.functionx.com/csharp40/interfaces/cugi.htm
            。interfaceとgenericの勉強のために、引用した。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.iInterfaceTest`1">
            <summary>
            interfaceのテストinterface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.TestInterfaceClass`1">
            <summary>
            interfaceのテストclass
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.LinearRegressionTest.Test">
            <summary>
            線形回帰のテスト
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.AddDecimalTest">
            <summary>
            行列の加算のテスト関数
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.AddDoubleTest">
            <summary>
            行列の加算のテスト関数
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.ConstructorDecimalTest">
            <summary>
            コンストラクターのテストメソッド。
            Matrix＜decimal＞を生成して、各要素を確認する。
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.ConstructorDoubleTest">
            <summary>
            コンストラクターのテストメソッド。
            Matrix＜double＞を生成して、各要素を確認する。
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.InverseDoubleTest">
            <summary>
            逆行列の計算のテスト
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.MultiplyDecimalTest">
            <summary>
            行列の乗算のテスト関数
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.MultiplyDoubleTest">
            <summary>
            行列の乗算のテスト関数
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.MultiplyMatrixVectorDoubleTest">
            <summary>
            行列とベクトルの積のテスト
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.MultiplyVectorMatrixDoubleTest">
            <summary>
            ベクトルと行列の積のテスト
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.SubtractDecimalTest" -->
        <!-- Badly formed XML comment ignored for member "M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.MatrixTest.SubtractDoubleTest" -->
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.AddDecimalTest">
            <summary>
            ベクトルの加算のテスト.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.AddDoubleTest">
            <summary>
            ベクトルの加算のテスト.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.ConstructorDecimalTest">
            <summary>
            コンストラクターのテストメソッド。
            Vector＜decimal＞を生成して、各要素を確認する。
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.ConstructorDoubleTest">
            <summary>
            コンストラクターのテストメソッド。
            Vector＜double＞を生成して、各要素を確認する。
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.MultiplyInnerProductDecimalTest">
            <summary>
            ベクトルの内積のテスト.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.MultiplyInnerProductDoubleTest">
            <summary>
            ベクトルの内積のテスト.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.MultiplyMatrixVectorDoubleTest">
            <summary>
            行列とベクトルの積のテスト
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.MultiplyVectorMatrixDoubleTest">
            <summary>
            ベクトルと行列の積のテスト
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.SubtractDecimalTest">
            <summary>
            ベクトルの加算のテスト.
            </summary>
        </member>
        <member name="M:Test.Tremendous1192.SelfEmployed.CoMPASS.MathApp.VectorTest.SubtractDoubleTest">
            <summary>
            ベクトルの加算のテスト.
            </summary>
        </member>
    </members>
</doc>
